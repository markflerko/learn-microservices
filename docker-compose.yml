version: "3.8"

services:
  workflow-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=workflow-service
    command: npm run start:dev -- workflow-service
    environment:
      - POSTGRES_HOST=workflow-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflow
      - NATS_URL=nats://nats:4222
    deploy:
      replicas: 3
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/workflow-service:/usr/src/app/apps/workflow-service
    depends_on:
      - workflow-db
      - nats

  workflow-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflow

  mcrsers:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=mcrsers
    command: npm run start:dev -- mcrsers
    ports:
      - 3000:3000
    environment:
      - POSTGRES_HOST=mcrsers-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcrsers
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/mcrsers:/usr/src/app/apps/mcrsers
    depends_on:
      - mcrsers-db
      - workflow-service
      - nats

  mcrsers-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcrsers
  nats:
    image: nats:2.2.2-alpine
  
  alarms-generator:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-generator
    command: npm run start:dev -- alarms-generator
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/alarms-generator:/usr/src/app/apps/alarms-generator
    depends_on:
      - nats
  
  alarms-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-service
    command: npm run start:dev -- alarms-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/alarms-service:/usr/src/app/apps/alarms-service
    depends_on:
      - nats
  
  notification-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=notification-service
    command: npm run start:dev -- notification-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/notification-service:/usr/src/app/apps/notification-service
    depends_on:
      - nats
  
  alarms-classifier-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-classifier-service
    command: npm run start:dev -- alarms-classifier-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/alarms-classifier-service:/usr/src/app/apps/alarms-classifier-service
    depends_on:
      - nats